<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[tka's blog]]></title>
  <link href="http://tka.github.io/atom.xml" rel="self"/>
  <link href="http://tka.github.io/"/>
  <updated>2014-01-31T17:28:07+08:00</updated>
  <id>http://tka.github.io/</id>
  <author>
    <name><![CDATA[tka]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PostgreSQL 9.3 JSON type first impression]]></title>
    <link href="http://tka.github.io/blog/2013/09/12/postgresql-9-dot-3-json-type-first-impression/"/>
    <updated>2013-09-12T13:51:00+08:00</updated>
    <id>http://tka.github.io/blog/2013/09/12/postgresql-9-dot-3-json-type-first-impression</id>
    <content type="html"><![CDATA[<p>把 <a href="https://hackpad.com/g0v.tw--0M0HW9tSVNQ">https://hackpad.com/g0v.tw&#8211;0M0HW9tSVNQ</a> 裡面 201201~201307JSON 格式資料抽了12萬筆丟進新的 pg 新的 JSON 格式欄位裡面測試</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">pg_conn</span><span class="o">.</span><span class="n">exec</span><span class="p">(</span><span class="s1">&#39;CREATE TABLE IF NOT EXISTS tenders (id varchar(128) PRIMARY KEY, data json)&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">pg_conn</span><span class="o">.</span><span class="n">prepare</span><span class="p">(</span> <span class="s1">&#39;insert_tender&#39;</span><span class="p">,</span> <span class="s2">&quot;INSERT INTO tenders VALUES ($1, $2);&quot;</span> <span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="no">Benchmark</span><span class="o">.</span><span class="n">bm</span> <span class="k">do</span> <span class="o">|</span><span class="n">benchmark</span><span class="o">|</span>
</span><span class='line'>  <span class="n">benchmark</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;insert json&quot;</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">Dir</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;tenders-json/**/*.json&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">id</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="s2">&quot;.json&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">json</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">){</span><span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">}</span>
</span><span class='line'>      <span class="n">conn</span><span class="o">.</span><span class="n">exec_prepared</span><span class="p">(</span> <span class="s1">&#39;insert_tender&#39;</span><span class="p">,</span> <span class="o">[</span><span class="nb">id</span><span class="p">,</span> <span class="n">json</span><span class="o">]</span> <span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>簡單效能測試結果是</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">g0v_pcc</span><span class="o">=</span><span class="c1"># \d tenders;</span>
</span><span class='line'> <span class="nb">id</span>   <span class="o">|</span> <span class="n">character</span> <span class="n">varying</span><span class="p">(</span><span class="mi">128</span><span class="p">)</span> <span class="o">|</span> <span class="err">非</span> <span class="no">Null</span>
</span><span class='line'> <span class="n">data</span> <span class="o">|</span> <span class="n">json</span>                   <span class="o">|</span>
</span><span class='line'>
</span><span class='line'><span class="n">g0v_pcc</span><span class="o">=</span><span class="c1"># select count(*) from tenders;</span>
</span><span class='line'> <span class="mi">122788</span>
</span><span class='line'>
</span><span class='line'><span class="err">時間</span><span class="p">:</span> <span class="mi">51</span><span class="o">.</span><span class="mi">111</span> <span class="n">ms</span>
</span><span class='line'><span class="n">g0v_pcc</span><span class="o">=</span><span class="c1">#  select count(*) from tenders where data#&gt;&gt;&#39;{機關資料,機關名稱}&#39; = &#39;國防部&#39;;</span>
</span><span class='line'>   <span class="mi">318</span>
</span><span class='line'>
</span><span class='line'><span class="err">時間</span><span class="p">:</span> <span class="mi">5149</span><span class="o">.</span><span class="mi">975</span> <span class="n">ms</span>
</span><span class='line'><span class="n">g0v_pcc</span><span class="o">=</span><span class="c1"># select count(*) from tenders where data::text like &#39;%國防部%&#39;;</span>
</span><span class='line'>  <span class="mi">5023</span>
</span><span class='line'>
</span><span class='line'><span class="err">時間</span><span class="p">:</span> <span class="mi">2532</span><span class="o">.</span><span class="mi">225</span> <span class="n">ms</span>
</span><span class='line'><span class="n">g0v_pcc</span><span class="o">=</span><span class="c1">#  select * from tenders where data#&gt;&gt;&#39;{機關資料,機關名稱}&#39; = &#39;國防部&#39; limit 1;</span>
</span><span class='line'><span class="err">時間</span><span class="p">:</span> <span class="mi">7</span><span class="o">.</span><span class="mi">188</span> <span class="n">ms</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arch Linux 字型設定]]></title>
    <link href="http://tka.github.io/blog/2013/08/26/archlinux-zi-xing-she-ding/"/>
    <updated>2013-08-26T23:33:00+08:00</updated>
    <id>http://tka.github.io/blog/2013/08/26/archlinux-zi-xing-she-ding</id>
    <content type="html"><![CDATA[<p>用了好一陣子的 Arch Linux 搭 KDE, 最近裝新機器時又覺得字型怎麼調都不對, 之前都是採用 <a href="https://wiki.archlinux.org/index.php/Font_Configuration#Ubuntu">Ubuntu 的字型解決方案</a> 不過這次怎麼調都不順眼, 乾脆改用 <a href="https://wiki.archlinux.org/index.php/Font_Configuration#Infinality">Infinality 的方案</a>,
直接安裝打包好的整包套件 <a href="https://wiki.archlinux.org/index.php/Font_Configuration#Install_from_custom_repository">infinality-bundle</a>.
然後在 <code>~/.config/fontconfig/fonts.conf</code> 裡面加入習慣的字型順序, 像是</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  &lt;alias binding="strong"&gt;
</span><span class='line'>    &lt;family&gt;serif&lt;/family&gt;
</span><span class='line'>    &lt;prefer&gt;
</span><span class='line'>      &lt;family&gt;DejaVu Serif&lt;/family&gt;
</span><span class='line'>      &lt;family&gt;Droid Sans Fallback&lt;/family&gt;
</span><span class='line'>    &lt;/prefer&gt;
</span><span class='line'>  &lt;/alias&gt;
</span><span class='line'>
</span><span class='line'>  &lt;alias binding="strong"&gt;
</span><span class='line'>    &lt;family&gt;sans-serif&lt;/family&gt;
</span><span class='line'>    &lt;prefer&gt;
</span><span class='line'>      &lt;family&gt;DejaVu Sans&lt;/family&gt;
</span><span class='line'>      &lt;family&gt;Droid Sans Fallback&lt;/family&gt;
</span><span class='line'>    &lt;/prefer&gt;
</span><span class='line'>  &lt;/alias&gt;
</span><span class='line'>
</span><span class='line'>  &lt;alias binding="strong"&gt;
</span><span class='line'>    &lt;family&gt;monospace&lt;/family&gt;
</span><span class='line'>    &lt;prefer&gt;
</span><span class='line'>      &lt;family&gt;DejaVu Sans Mono&lt;/family&gt;
</span><span class='line'>      &lt;family&gt;Droid Sans Fallback&lt;/family&gt;
</span><span class='line'>    &lt;/prefer&gt;
</span><span class='line'>  &lt;/alias&gt;</span></code></pre></td></tr></table></div></figure>


<p>基本上效果還不錯, 應該會先用一陣子, 哪天不順眼了再調整</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[從 windows8 iso 檔建立安裝隨身碟]]></title>
    <link href="http://tka.github.io/blog/2013/08/24/cong-windows8-iso-dang-jian-li-an-zhuang-sui-shen-die/"/>
    <updated>2013-08-24T00:13:00+08:00</updated>
    <id>http://tka.github.io/blog/2013/08/24/cong-windows8-iso-dang-jian-li-an-zhuang-sui-shen-die</id>
    <content type="html"><![CDATA[<p>步驟大致上是</p>

<ul>
<li>挑隻4G以上的隨身碟</li>
<li>把隨身碟格式化成 NTFS 格式</li>
<li>sudo mount -o loop windows8.iso /mnt/win_iso</li>
<li>cp -R /mnt/win_iso/* usb_disk</li>
<li>sudo sync</li>
<li>sudo ms-sys -7 /dev/usb_disk</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[設定YARD環境]]></title>
    <link href="http://tka.github.io/blog/2013/08/21/she-ding-yardhuan-jing/"/>
    <updated>2013-08-21T03:13:00+08:00</updated>
    <id>http://tka.github.io/blog/2013/08/21/she-ding-yardhuan-jing</id>
    <content type="html"><![CDATA[<p>添加專案中的 <code>Gemfile</code> 與 <code>.yardopts</code> 如下</p>

<p>Gemfile</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;guard&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;guard-yard&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;redcarpet&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;github-markup&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>.yardopts</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">--</span><span class="n">markup</span><span class="o">-</span><span class="n">provider</span><span class="o">=</span><span class="n">redcarpet</span>
</span><span class='line'><span class="o">--</span><span class="n">markup</span><span class="o">=</span><span class="n">markdown</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下來執行 <code>guard init yard</code> 初始化 guard 的環境,
之後只需要執行 <code>guard start</code> 便可監控檔案異動, 立刻透過 YARD 產生文件</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby-tuesday-25-分享]]></title>
    <link href="http://tka.github.io/blog/2013/08/10/ruby-tuesday-25-fen-xiang/"/>
    <updated>2013-08-10T15:55:00+08:00</updated>
    <id>http://tka.github.io/blog/2013/08/10/ruby-tuesday-25-fen-xiang</id>
    <content type="html"><![CDATA[<p>上個月底在 Tuby Tuesday 25 分享了, 利用 ruby library 實作 Collaborative Filtering 推薦系統的心得</p>

<p>投影片如下</p>

<script async class="speakerdeck-embed" data-id="4f5346c0db6301305e137a9184b31ee5" data-ratio="1.33507170795306" src="http://tka.github.io//speakerdeck.com/assets/embed.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mahout 搭配 JRuby 建立環境與簡單測試]]></title>
    <link href="http://tka.github.io/blog/2012/10/14/jian-li-mahout-huan-jing/"/>
    <updated>2012-10-14T11:22:00+08:00</updated>
    <id>http://tka.github.io/blog/2012/10/14/jian-li-mahout-huan-jing</id>
    <content type="html"><![CDATA[<h1>建立環境</h1>

<ol>
<li>下載&amp;安裝 Mahout

<ul>
<li><a href="https://cwiki.apache.org/confluence/display/MAHOUT/BuildingMahout">https://cwiki.apache.org/confluence/display/MAHOUT/BuildingMahout</a></li>
</ul>
</li>
<li>下載&amp;安裝 Hadoop

<ul>
<li><a href="http://www.apache.org/dyn/closer.cgi/hadoop/common/">http://www.apache.org/dyn/closer.cgi/hadoop/common/</a></li>
<li>單機安裝步驟 <a href="http://hadoop.apache.org/common/docs/stable/single_node_setup.html">http://hadoop.apache.org/common/docs/stable/single_node_setup.html</a></li>
</ul>
</li>
<li>設定 ClASSPATH</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> export CLASSPATH=.:~/Project/Mahout/mahout-distribution-0.7/mahout-core-0.7.jar:~/Project/Mahout/mahout-distribution-0.7/mahout-math-0.7.jar:~/Project/Mahout/mahout-distribution-0.7/lib/'*'</span></code></pre></td></tr></table></div></figure>


<h1>簡單測試</h1>

<p>可以從 <a href="https://github.com/tdunning/MiA">https://github.com/tdunning/MiA</a> 下載 Mahout in Action 的範例程式, 這邊選擇第2章的 <a href="https://github.com/tdunning/MiA/blob/mahout-0.7/src/main/java/mia/recommender/ch02/RecommenderIntro.java">RecommenderIntro.java</a> 來將他改寫為 JRuby 的版本, 改寫的結果如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;java&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Mahout</span>
</span><span class='line'>  <span class="n">include_package</span> <span class="s2">&quot;org.apache.mahout.cf.taste.impl.model.file&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">include_package</span> <span class="s2">&quot;org.apache.mahout.cf.taste.impl.neighborhood&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">include_package</span> <span class="s2">&quot;org.apache.mahout.cf.taste.impl.recommender&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">include_package</span> <span class="s2">&quot;org.apache.mahout.cf.taste.impl.similarity&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">include_package</span> <span class="s2">&quot;org.apache.mahout.cf.taste.model&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">include_package</span> <span class="s2">&quot;org.apache.mahout.cf.taste.neighborhood&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">include_package</span> <span class="s2">&quot;org.apache.mahout.cf.taste.recommender&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">include_package</span> <span class="s2">&quot;org.apache.mahout.cf.taste.similarity&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">model</span> <span class="o">=</span> <span class="ss">Mahout</span><span class="p">:</span><span class="ss">:FileDataModel</span><span class="o">.</span><span class="n">new</span><span class="p">(</span> <span class="n">java</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">File</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;intro.csv&quot;</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="n">similarity</span> <span class="o">=</span> <span class="ss">Mahout</span><span class="p">:</span><span class="ss">:PearsonCorrelationSimilarity</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">model</span><span class="p">);</span>
</span><span class='line'><span class="n">neighborhood</span> <span class="o">=</span> <span class="ss">Mahout</span><span class="p">:</span><span class="ss">:NearestNUserNeighborhood</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">similarity</span><span class="p">,</span> <span class="n">model</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">recommender</span> <span class="o">=</span> <span class="ss">Mahout</span><span class="p">:</span><span class="ss">:GenericUserBasedRecommender</span><span class="o">.</span><span class="n">new</span><span class="p">(</span> <span class="n">model</span><span class="p">,</span> <span class="n">neighborhood</span><span class="p">,</span> <span class="n">similarity</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">recommendation</span> <span class="o">=</span><span class="n">recommender</span><span class="o">.</span><span class="n">recommend</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">recommendation</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java7 + JRuby 1.7.0.preview2 + Rawr]]></title>
    <link href="http://tka.github.io/blog/2012/08/24/java7-plus-jruby-1-dot-7-0-dot-preview2-plus-rawr/"/>
    <updated>2012-08-24T22:16:00+08:00</updated>
    <id>http://tka.github.io/blog/2012/08/24/java7-plus-jruby-1-dot-7-0-dot-preview2-plus-rawr</id>
    <content type="html"><![CDATA[<p>這兩天試著把 <a href="http://fireapp.handlino.com/">Fire.app</a> 升級到 <a href="http://jruby.org/">JRuby</a> 1.7.0.preview2, 過程中遇到一些 ruby 1.8.7 升級到 1.9.3 的小問題, 不過解決起來還算順手。後來同事想試試看搭配 Java7 的效果如何這時候就遇到問題了。</p>

<p>原因在於之前打包是使用 <a href="https://github.com/rawr/rawr">Rawr</a>, 但是他使用的 <a href="http://launch4j.sourceforge.net/">launch4j</a> 在 OS X 上面搭配 Java7 打包出來的程式無法順利執行。 看起來是因為　Java7 不是 apple 放出來的版本造成的。所以必須要改用 <a href="http://java.net/projects/appbundler">Java Application Bundler</a>, 這邊最簡單的方法就是一樣用 Rawr 建立 jar 檔, 然後改寫　rawr:bundle:app 這個 rake task 就好了。</p>

<p>主要需要處理的部份有</p>

<ol>
<li>移動程式目錄裡面的 <code>Contents/Resources/Java</code> 到 <code>Contents/Java</code></li>
<li>複製 Java Application Bundler 專案中的 <code>JavaAppLauncher</code> 這個檔案到 <code>Contents/MacOS</code> 目錄下</li>
<li>改寫 <code>Contents/Info.plist</code> 的部份內容如下, 這邊的細節可以參考 Java Application Bundler 的文件跟 source</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;key&gt;</span>CFBundleExecutable<span class="nt">&lt;/key&gt;</span>
</span><span class='line'><span class="nt">&lt;string&gt;</span>JavaAppLauncher<span class="nt">&lt;/string&gt;</span>
</span><span class='line'><span class="nt">&lt;key&gt;</span>JVMMainClassName<span class="nt">&lt;/key&gt;</span>
</span><span class='line'><span class="nt">&lt;string&gt;</span>com.handlino.fireapp.Main<span class="nt">&lt;/string&gt;</span>
</span><span class='line'><span class="nt">&lt;key&gt;</span>JVMOptions<span class="nt">&lt;/key&gt;</span>
</span><span class='line'><span class="nt">&lt;array&gt;</span>
</span><span class='line'>  <span class="nt">&lt;key&gt;</span>-XstartOnFirstThread<span class="nt">&lt;/key&gt;</span>
</span><span class='line'><span class="nt">&lt;/array&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>做好這些步驟之後, 就可以像過去一樣輕鬆的打包出各個平台使用 Java7 + JRuby 1.7.0.preview2 程式</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rack 技巧]]></title>
    <link href="http://tka.github.io/blog/2012/08/13/rack-auth-ji-qiao/"/>
    <updated>2012-08-13T12:58:00+08:00</updated>
    <id>http://tka.github.io/blog/2012/08/13/rack-auth-ji-qiao</id>
    <content type="html"><![CDATA[<p>最近比較常發佈基於 serve 的 rack app 到 heroku 上面, 通常是網站的 prototype.</p>

<p>常常因為網站不公開, 所以需要特定的人才看的到.</p>

<p>這時候只需要加一下 rack middleware 就可以達到這個需求</p>

<h3>使用 Rack::Auth::Basic</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">use</span> <span class="ss">Rack</span><span class="p">:</span><span class="ss">:Auth</span><span class="o">::</span><span class="no">Basic</span><span class="p">,</span> <span class="s2">&quot;Snack cabinet&quot;</span> <span class="k">do</span> <span class="o">|</span><span class="n">username</span><span class="p">,</span> <span class="n">password</span><span class="o">|</span>
</span><span class='line'>  <span class="n">username</span> <span class="o">==</span> <span class="s1">&#39;admin&#39;</span> <span class="o">&amp;&amp;</span> <span class="n">password</span> <span class="o">==</span> <span class="s1">&#39;foobar&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>使用 Warden</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;warden&quot;</span>
</span><span class='line'><span class="k">class</span> <span class="nc">FailLoginApp</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">call</span><span class="p">(</span><span class="n">env</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">[</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span> <span class="s2">&quot;Content-Type&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;text/html&quot;</span> <span class="p">},</span> <span class="o">[&lt;&lt;</span><span class="no">EOL</span>
</span><span class='line'><span class="sh">      &lt;html&gt;</span>
</span><span class='line'><span class="sh">      &lt;body&gt;</span>
</span><span class='line'><span class="sh">      &lt;h1&gt;Login&lt;/h1&gt;</span>
</span><span class='line'><span class="sh">      &lt;form action=&quot;/&quot; method=&quot;post&quot;&gt;</span>
</span><span class='line'><span class="sh">    username:&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sh">    password:&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;</span>
</span><span class='line'><span class="sh">    &lt;input type=&quot;submit&quot;&gt;</span>
</span><span class='line'><span class="sh">    &lt;/form&gt;</span>
</span><span class='line'><span class="sh">    &lt;/body&gt;</span>
</span><span class='line'><span class="sh">    &lt;/html&gt;</span>
</span><span class='line'><span class="no">EOL</span>
</span><span class='line'>    <span class="o">]]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">CheckLogin</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">app</span><span class="p">,</span> <span class="n">opts</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>    <span class="vi">@app</span><span class="o">=</span><span class="n">app</span>
</span><span class='line'>    <span class="vi">@opts</span><span class="o">=</span><span class="n">opts</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="n">env</span><span class="p">)</span>
</span><span class='line'>    <span class="n">request</span> <span class="o">=</span> <span class="ss">Rack</span><span class="p">:</span><span class="ss">:Request</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">env</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">env</span><span class="o">[</span><span class="s1">&#39;warden&#39;</span><span class="o">].</span><span class="n">logout</span> <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">params</span><span class="o">[</span><span class="s2">&quot;logout&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="n">env</span><span class="o">[</span><span class="s1">&#39;warden&#39;</span><span class="o">].</span><span class="n">authenticate!</span>
</span><span class='line'>
</span><span class='line'>    <span class="vi">@app</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">env</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="ss">Warden</span><span class="p">:</span><span class="ss">:Strategies</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="ss">:password</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">valid?</span>
</span><span class='line'>    <span class="n">params</span><span class="o">[</span><span class="s2">&quot;username&quot;</span><span class="o">]</span> <span class="o">||</span> <span class="n">params</span><span class="o">[</span><span class="s2">&quot;password&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">authenticate!</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">params</span><span class="o">[</span><span class="s2">&quot;username&quot;</span><span class="o">]</span> <span class="o">==</span> <span class="s2">&quot;admin&quot;</span> <span class="o">&amp;&amp;</span> <span class="n">params</span><span class="o">[</span><span class="s2">&quot;password&quot;</span><span class="o">]</span> <span class="o">==</span> <span class="s2">&quot;foobar&quot;</span>
</span><span class='line'>      <span class="n">success!</span><span class="p">({})</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="nb">fail</span><span class="o">!</span><span class="p">(</span><span class="s2">&quot;Could not log in&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">use</span> <span class="ss">Rack</span><span class="p">:</span><span class="ss">:Session</span><span class="o">::</span><span class="no">Cookie</span>
</span><span class='line'>
</span><span class='line'><span class="n">use</span> <span class="ss">Warden</span><span class="p">:</span><span class="ss">:Manager</span> <span class="k">do</span> <span class="o">|</span><span class="n">manager</span><span class="o">|</span>
</span><span class='line'>  <span class="n">manager</span><span class="o">.</span><span class="n">default_strategies</span> <span class="ss">:password</span>
</span><span class='line'>  <span class="n">manager</span><span class="o">.</span><span class="n">failure_app</span> <span class="o">=</span> <span class="no">FailLoginApp</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">use</span> <span class="no">CheckLogin</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2012 JavaTwo]]></title>
    <link href="http://tka.github.io/blog/2012/08/07/2012-javatwo/"/>
    <updated>2012-08-07T22:39:00+08:00</updated>
    <id>http://tka.github.io/blog/2012/08/07/2012-javatwo</id>
    <content type="html"><![CDATA[<p>今年 7月 20 日很幸運的有機會在 JavaTwo 大會上跟 @weijen 合講了一個關於 JRuby 的 session</p>

<p>我的部份投影片如下</p>

<script async class="speakerdeck-embed" data-id="5021266316e890000205c801" data-ratio="1.3333333333333333" src="http://tka.github.io//speakerdeck.com/assets/embed.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[將 Rails 專案中使用的 MySQL 轉移到 PostgreSQL]]></title>
    <link href="http://tka.github.io/blog/2012/04/16/jiang-rails-zhuan-an-zhong-ji-you-de-mysql-zi-liao-zhuan-yi-dao-postgresql/"/>
    <updated>2012-04-16T15:13:00+08:00</updated>
    <id>http://tka.github.io/blog/2012/04/16/jiang-rails-zhuan-an-zhong-ji-you-de-mysql-zi-liao-zhuan-yi-dao-postgresql</id>
    <content type="html"><![CDATA[<ol>
<li>開一個新的 Rails 專案, DB 使用 PostgreSQL</li>
<li>將舊專案中的 db/schema.rb 改寫成新專案中的 db migration</li>
<li>在新專案中跑 <code>rake db:migrate</code> 建立 PostgreSQL 中的資料庫</li>
<li>使用 <a href="https://github.com/maxlapshin/mysql2postgres">mysql2postgres</a> 做轉移</li>
<li>因為 db schema 已經透過 Rails 機制完成轉移, 這邊轉移時只需要轉資料部份</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[elasticsearch入門筆記(2)]]></title>
    <link href="http://tka.github.io/blog/2012/02/26/elasticsearchru-men-bi-ji-2/"/>
    <updated>2012-02-26T04:16:00+08:00</updated>
    <id>http://tka.github.io/blog/2012/02/26/elasticsearchru-men-bi-ji-2</id>
    <content type="html"><![CDATA[<h2>field 種類</h2>

<p>來源: <a href="http://www.elasticsearch.org/guide/reference/mapping/core-types.html">http://www.elasticsearch.org/guide/reference/mapping/core-types.html</a></p>

<p>主要的資料格式摘要如下, 其他還有不少種類的資料格式可用.
其他詳細的內容需要參考, 該頁面右邊 Types 下面的分類(這裡的Types是指欄位的種類 )</p>

<table>
  <tr>
    <td>string</td>
  </tr>
  <tr>
    <td>float, double, byte, short, integer, long</td>
  </tr>
  <tr>
    <td>boolean</td>
  </tr>
  <tr>
    <td>data</td>
  </tr>
  <tr>
    <td>binary</td>
  </tr>
</table>


<!-- more -->


<h2>multi_field 欄位格式</h2>

<p>在許多field 種類中要特別提到的是multi_field, multi_field 可以做到的功能是u在建立 document 時, 將特定欄位給予多個 analyer(負責分詞的角色) 如此便可滿足中英文混雜的文章搜尋需求。</p>

<p>例如 <code>elasticsearch遠比上Google搜尋更有效率</code> 需要在下列幾種輸入時都會被搜尋到</p>

<ol>
<li><code>elast</code>或是<code>elasticsearch</code>: 只輸入了單字的前幾個字, 或是完整單字</li>
<li><code>更有效率</code> 中文句子</li>
</ol>


<p>這時候就可以將欄位設定成 multi_field, 並且設定兩個不同的分詞方式 <code>cjk</code> 與 <code>edgeNGram</code>, 其中 <code>cjk</code> 會對中文的內容用 <code>nGram</code> 進行切詞, 而 <code>edgeNGram</code> 則會建立 <code>e</code>, <code>el</code>, <code>ela</code>, <code>elas</code>, <code>elast</code>&hellip;. 的切詞</p>

<p>另外要注意的事情是 multi_field 裏面建立的欄位並不包括在預設的搜尋欄位<code>_all</code>中, 必須要特別指定才會被搜尋到</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[elasticsearch入門筆記(1)]]></title>
    <link href="http://tka.github.io/blog/2012/02/25/elasticsearchru-men-bi-ji-1/"/>
    <updated>2012-02-25T16:08:00+08:00</updated>
    <id>http://tka.github.io/blog/2012/02/25/elasticsearchru-men-bi-ji-1</id>
    <content type="html"><![CDATA[<h2>角色關係對照</h2>

<p>elasticsearch 跟 MySQL 中定義資料格式的角色關係對照表如下</p>

<table class="midden center">
  <thead><tr><th>MySQL</th><th>elasticsearch</th></tr></thead>
  <tbody>
    <tr><td>database</td>     <td>index</td></tr>
    <tr><td>table</td>        <td>type</td></tr>
    <tr><td>table schema</td> <td>mapping</td></tr>
    <tr><td>row</td>          <td>document</td></tr>
    <tr><td>field</td>        <td>field</td></tr>
  </tbody>
</table>




<!-- more -->


<h2>設定檔與目錄配置</h2>

<p>參考:</p>

<ul>
<li><a href="http://www.elasticsearch.org/guide/reference/setup/dir-layout.html">http://www.elasticsearch.org/guide/reference/setup/dir-layout.html</a></li>
<li><a href="http://www.elasticsearch.org/guide/reference/setup/configuration.html">http://www.elasticsearch.org/guide/reference/setup/configuration.html</a></li>
</ul>


<h2>建立 index</h2>

<p><code>curl -XPUT 'http://localhost:9200/my_index_name/'</code> 這邊的 <code>my_index_name</code> 就是要被建立的 index 的名字</p>

<h2>設定 index</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -XPUT 'localhost:9200/my_index_name/_settings' -d '
</span><span class='line'>{
</span><span class='line'>    "index" : {
</span><span class='line'>        "number_of_replicas" : 4
</span><span class='line'>    }
</span><span class='line'>}
</span><span class='line'>'</span></code></pre></td></tr></table></div></figure>


<p>
可以設定的參數在 <a href="http://www.elasticsearch.org/guide/reference/api/admin-indices-update-settings.html">這頁</a></p>

<h2>建立 type 與 mapping</h2>

<p>在預設的情況下 elasticsearch 會自動建立 type 跟 mapping, 但是我會建議自行定義 mapping 的內容, 因為這樣可以做出比較符合需求的設定,例如不同的欄位要使用不同的分詞方式</p>

<p>下面的範例中 <code>my_index_name</code>, <code>my_type_name</code>, <code>my_field_name</code> 都是自己命名的</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -XPUT 'http://localhost:9200/my_index_name/my_type_name/_mapping' -d '
</span><span class='line'>{
</span><span class='line'>    "my_type_name" : {
</span><span class='line'>        "properties" : {
</span><span class='line'>            "my_field_name" : {"type" : "string", "store" : "yes"},
</span><span class='line'>            "my_field_name2" : {"type" : "string", "store" : "yes"},
</span><span class='line'>            "my_field_name3" : {"type" : "date", "store" : "yes"}
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>}
</span><span class='line'>'</span></code></pre></td></tr></table></div></figure>


<p>每個欄位的定義, 會像是 <code>"my_field_name" : {"type" : "string", "store" : "yes"}</code> 這樣子,
常用的欄位格式定義可以參考<a href="http://www.elasticsearch.org/guide/reference/mapping/core-types.html">這頁</a></p>

<h2>建立搜尋資料</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -XPOST 'localhost:9200/my_index_name/my_type_name/1' -d ' 
</span><span class='line'>{
</span><span class='line'>    "my_field_name" : "test",
</span><span class='line'>    "my_field_name2": "test2",
</span><span class='line'>    "my_fidle_name3": "2012-02-1"
</span><span class='line'>}
</span><span class='line'>'</span></code></pre></td></tr></table></div></figure>


<p></p>

<p><code>my_index_name/my_type_name/1</code> 中的<code>1</code>代表的是這比資料的<code>id</code>, 建議寫入資料庫裏面的 primaty key, 如果沒有設定的話, 會自動產生像是<code>EYQqF6eyTJGJ-6aZiIYZsg</code>的內容</p>

<h2>搜尋資料</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -XPOST 'localhost:9200/my_index_name/my_type_name/_search' -d '
</span><span class='line'>{ 
</span><span class='line'>    "query":{ 
</span><span class='line'>        "text":{ "_all":"test"}
</span><span class='line'>    }
</span><span class='line'>}
</span><span class='line'>'</span></code></pre></td></tr></table></div></figure>


<p>詳細搜尋的語法需參考<a href="http://www.elasticsearch.org/guide/reference/query-dsl/">這頁</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在 <del>Compass.app</del> Fire.app 中使用ERB/Haml樣板語言]]></title>
    <link href="http://tka.github.io/blog/2012/02/20/zai-compassappzhong-shi-yong-erb-slash-hamlyang-ban/"/>
    <updated>2012-02-20T22:02:00+08:00</updated>
    <id>http://tka.github.io/blog/2012/02/20/zai-compassappzhong-shi-yong-erb-slash-hamlyang-ban</id>
    <content type="html"><![CDATA[<h2>2012-04-17 更新</h2>

<p>  文中提到的 Compass.app, 正式發行時改名為 <a href="http://fireapp.handlino.com">Fire.app</a></p>

<h2>簡介</h2>

<p><a href="http://compass.handlino.com/">Coompass.app</a>將要釋出新版本支援 ERB/Haml 樣板, 過去使用 Compass.app 雖然提供了簡單的 web server, 但是做網站 prototype 時, 總是要一頁一頁 html 用手工刻. 但是現在不用了因為即將更新的 Compass.app 會支援 ERB 跟 Haml 兩種樣板語言</p>

<h2>改用 ERB 或 Haml 樣板語言的好處</h2>

<h4>可以套用 layout 跟使用 partial</h4>

<p>   網站的 Header 與 Footer 常常是重複的, 當老闆說網站的標題要改掉時, 原本你需要改100個頁面, 現在你只需要改一個檔案就可以了, 或是寫過的 sidebar , 寫新的一頁時再也不用整段 html 複製貼上了.</p>

<h4>可以使用 helper</h4>

<p>  導覽列上目前頁面的連結, 總是要顯示出跟其他連結不同的樣式, 像是要在 class 上加上 current, 來做出特別的效果, 搭配 helper 你再也不用一頁一頁修改, 現在是哪個連結是當前頁面的連結了</p>

<p>  要插入一段沒有意義文字, 讓版面看起來比較像真的網站. 過去可以使用 <a href="http://more.handlino.com/">MoreText</a> 用 javascript 插入假文, 現在可以讓 helper 直接把 MoreText 的假文插入網頁裡, 開發更加方便！</p>

<!-- more -->


<h4>可以使用 Ruby 語法</h4>

<p>  如果願意的話, 還可學一點 Ruby 程式語言的語法, 如此再寫網頁時便可以快速的完成工作, 例如要列出 10 筆文章的標題只要像下面這樣寫就可以了</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  &lt;ul&gt;
</span><span class='line'>    &lt;% (1..10).each do |x|%&gt;
</span><span class='line'>      &lt;li&gt;文章&lt;%=x%&gt; 標題&lt;/li&gt;
</span><span class='line'>    &lt;% end %&gt;
</span><span class='line'>  &lt;/ul&gt;</span></code></pre></td></tr></table></div></figure>


<p>就會得到下面的html</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;ul&gt;
</span><span class='line'>  &lt;li&gt;文章 1 標題&lt;/li&gt;
</span><span class='line'>  &lt;li&gt;文章 2 標題&lt;/li&gt;
</span><span class='line'>  &lt;li&gt;文章 3 標題&lt;/li&gt;
</span><span class='line'>  &lt;li&gt;文章 4 標題&lt;/li&gt;
</span><span class='line'>  &lt;li&gt;文章 5 標題&lt;/li&gt;
</span><span class='line'>  &lt;li&gt;文章 6 標題&lt;/li&gt;
</span><span class='line'>  &lt;li&gt;文章 7 標題&lt;/li&gt;
</span><span class='line'>  &lt;li&gt;文章 8 標題&lt;/li&gt;
</span><span class='line'>  &lt;li&gt;文章 9 標題&lt;/li&gt;
</span><span class='line'>  &lt;li&gt;文章 10 標題&lt;/li&gt;
</span><span class='line'>&lt;/ul&gt;</span></code></pre></td></tr></table></div></figure>


<h3>樣板語法相關資料</h3>

<p>接下來只會提到在 Compass.app 環境中使用 ERB 或是 Haml 的使用方式, 而這兩種樣板語言的語法將不會被提到, 所以建議先參考下列幾個網址先學會 ERB 跟 Haml 的語法</p>

<ul>
<li>ERB

<ol>
<li> <a href="http://ruby-doc.org/stdlib-1.9.3/libdoc/erb/rdoc/ERB.html">http://ruby-doc.org/stdlib-1.9.3/libdoc/erb/rdoc/ERB.html</a></li>
<li> <a href="http://rrn.dk/rubys-erb-templating-system">http://rrn.dk/rubys-erb-templating-system</a></li>
<li> <a href="http://www.stuartellis.eu/articles/erb/">http://www.stuartellis.eu/articles/erb/</a></li>
</ol>
</li>
<li>Haml

<ol>
<li> <a href="http://haml-lang.com/">http://haml-lang.com/</a></li>
<li> <a href="http://blog.meituo.net/2011/03/27/haml-%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/">http://blog.meituo.net/2011/03/27/haml-%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/</a></li>
</ol>
</li>
</ul>


<h3>搭配 Compass.app 使用方式</h3>

<h4>建立頁面</h4>

<p>把檔案放在  專案目錄下, 檔名用 <code>.html.erb</code> 結尾的會使用 ERB 樣板語言, 用 <code>.html.haml</code> 結為尾的會使用 Haml 樣板語言處理, 而對對應的網址就是 <code>http://127.0.0.1:24680/ + 檔名</code> 去掉結尾的 <code>.erb</code> 或 <code>.haml</code></p>

<p>例如:
  專案目錄下面建立一個檔案, 命名為 <code>home.html.erb</code>, 寫入一些內容. 然後從瀏覽器中開啟 <code>http://127.0.0.1:24680/home.html</code> 就可以看到剛剛建立的網頁了. 同理如果是放在 Compass 專案目錄下面的 <code>about</code> 目錄的 <code>company.html.erb</code> 跟 <code>contact.html.haml</code>, 網址就會是 <code>http://127.0.0.1:24680/about/company.html</code> 跟 <code>http://127.0.0.1:24680/about/contact.html</code></p>

<h4>套用 layout</h4>

<p>頁面有兩種方法可以套用 layout</p>

<ol>
<li>指定頁面 layout 檔案</li>
<li>頁面同目錄或是上層目錄有 _layout.html.erb</li>
</ol>


<h5>頁面同目錄或是上層目錄有 _layout.html.erb</h5>

<p>如果頁面沒有指定目錄, 而且頁面所在目錄或是上層目錄中有檔案被命名為<code>_layout.html.erb</code>, 就會使用該檔案作為 layout 檔案 ._</p>

<p>例如:
有 <code>/_layout.html.erb</code> 存在且 <code>/about/_layout.html.erb</code> 不存在, 那 <code>/about/me.html.erb</code> 跟 <code>/about/contact.html.erb</code> 都會用 <code>/_layout.html.erb</code> 當作 layout 檔案</p>

<h5>指定頁面 layout 檔案</h5>

<p>建立一個新檔案, 命名方式是將頁面檔案的檔名結尾從 <code>.html.erb</code> 或是 <code>.html.haml</code> 改成 <code>.html.layout</code>, 同時在該檔案裏面指定要當作 layout 的檔案名增</p>

<p>例如:
<code>/about/me.html.erb</code> 要指定使用 <code>/about/mylayout.html.erb</code> 當作 layout 檔案, 就要建立新檔案並且命名為 <code>/about/me.html.layout</code>, 然後在 <code>/about/me.html.layout</code> 裏面寫 <code>/about/mylayout.html.erb</code>, 這樣就會使用 <code>/about/mylayout.html.erb</code> 來當作 layout 檔案而不是 <code>_layout.html.erb</code> 了</p>

<p>layout 檔案內容會長的像是下面的樣子, 其中 <code>&lt;%= yield%&gt;</code> 位置就是頁面會被載入的地方</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!DOCTYPE html&gt;
</span><span class='line'>&lt;!--[if lt IE 7]&gt; &lt;html lang="en" class="no-js ie6 oldie"&gt; &lt;![endif]--&gt;
</span><span class='line'>&lt;!--[if IE 7]&gt;    &lt;html lang="en" class="no-js ie7 oldie"&gt; &lt;![endif]--&gt;
</span><span class='line'>&lt;!--[if IE 8]&gt;    &lt;html lang="en" class="no-js ie8 oldie"&gt; &lt;![endif]--&gt;
</span><span class='line'>&lt;!--[if gt IE 8]&gt;&lt;!--&gt;
</span><span class='line'>  &lt;html class='no-js' lang='en'&gt;
</span><span class='line'>    &lt;!--&lt;![endif]--&gt;
</span><span class='line'>    &lt;head&gt;
</span><span class='line'>        &lt;meta charset='utf-8' /&gt;
</span><span class='line'>        &lt;meta content='IE=edge,chrome=1' http-equiv='X-UA-Compatible' /&gt;
</span><span class='line'>        &lt;title&gt;Site Title&lt;/title&gt;
</span><span class='line'>        &lt;meta content='' name='description' /&gt;
</span><span class='line'>        &lt;meta content='' name='author' /&gt;
</span><span class='line'>        &lt;meta content='width=device-width, initial-scale=1.0' name='viewport' /&gt;
</span><span class='line'>        &lt;link href='http://tka.github.io/stylesheets/style.css"%&gt;' rel='stylesheet' /&gt;
</span><span class='line'>        &lt;script src='http://tka.github.io/javascripts/modernizr-2.5.3.js'&gt;&lt;/script&gt;
</span><span class='line'>    &lt;/head&gt;
</span><span class='line'>    &lt;body&gt;
</span><span class='line'>        &lt;div id='container'&gt;
</span><span class='line'>            &lt;header&gt;&lt;/header&gt;
</span><span class='line'>            &lt;div id='main' role='main'&gt;
</span><span class='line'>                &lt;%= yield%&gt;
</span><span class='line'>            &lt;/div&gt;
</span><span class='line'>
</span><span class='line'>            &lt;div id="root-footer"&gt;&lt;/div&gt;
</span><span class='line'>        &lt;/div&gt;
</span><span class='line'>        &lt;div id="footer"&gt;&lt;/div&gt;
</span><span class='line'>    &lt;/body&gt;
</span><span class='line'>&lt;/html&gt;</span></code></pre></td></tr></table></div></figure>


<h3>套用 partial</h3>

<p>partial 是只網頁片段內容, 只要在建立檔案時用底線<code>_</code>開頭就可以當作 partial 呼叫, ex. <code>_top_nav.html.erb</code>
呼叫的時候只需要在頁面裏面寫 <code>&lt;%= render("top_nav")%&gt;</code>就可以了, 這邊不需要<code>_</code>跟<code>.html.erb</code>歐, 不管是頁面, layout 還是 partial 都可以使用 partial 來載入常用的內容</p>

<h3>套用 helper</h3>

<p>編寫頁面時可以透過 <code>&lt;%= helper名稱(helper參數1, helper參數2..)%&gt;</code> 的方式來呼叫 helper, 所以其實套用 partial 時也是透過呼叫叫作 <code>render</code> 的 helper 來達成載入 partial 檔案內容的工作</p>

<p>目前 Compass.app 內建的 helper 可以參考 <a href="http://get-serve.com/documentation/view-helpers">Serve View Helpers</a>, 如果要定義自己的 helper, 需要 Ruby 語言的基礎, 方法是在 Compass 專案目錄中建立 <code>view_helpers.rb</code>　內容如下</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>module ViewHelpers
</span><span class='line'>  def helper_name(arg1, arg2, ....)
</span><span class='line'>      return "something"
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>如果要做到前面提到的當前頁面標示跟載入 MoreText 可以下載<a href="https://gist.github.com/970ce5226b95e2ec52dd">檔案</a>放到  專案目錄中, 如此 link_to helper 會在當前網頁路徑(ex. <code>/about/me.html</code>)相同的連結中加上 <code>class="current"</code>, moretext  helper 則可插入 MoreText 資料</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在 windows7 中使用 middleman]]></title>
    <link href="http://tka.github.io/blog/2012/01/23/zai-windows7-zhong-shi-yong-middleman/"/>
    <updated>2012-01-23T03:58:00+08:00</updated>
    <id>http://tka.github.io/blog/2012/01/23/zai-windows7-zhong-shi-yong-middleman</id>
    <content type="html"><![CDATA[<h2>步驟</h2>

<ol>
<li>下載 RubyInstaller 與 Devkit

<ul>
<li>到 <a href="http://rubyinstaller.org/downloads/">http://rubyinstaller.org/downloads/</a></li>
<li>下載 Ruby 1.9.3-p0 <a href="http://rubyforge.org/frs/download.php/75465/rubyinstaller-1.9.3-p0.exe">http://rubyforge.org/frs/download.php/75465/rubyinstaller-1.9.3-p0.exe</a></li>
<li>下載 Devkit <a href="https://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe">https://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe</a></li>
</ul>
</li>
<li>安裝 RubyInstaller

<ul>
<li>安裝過程勾選

<ol>
<li> Add Ruby executables to your Path</li>
<li> Associate .rb and .rbw files with thus ruby installation</li>
</ol>
</li>
</ul>
</li>
<li>解開 Devkit

<ul>
<li>點選下載回來的 DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe 便可解開到特定目錄中</li>
</ul>
</li>
<li>安裝 middleman

<ul>
<li>在剛剛解開的 Devkit 目錄中點選 msys 批次檔案</li>
<li>在彈出的視窗中輸入 <code>gem install middleman</code></li>
</ul>
</li>
<li>啟動 PowerShell 即可使用 middleman, 指令請參考 <a href="http://middlemanapp.com">http://middlemanapp.com</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA['blog 改用 octopress']]></title>
    <link href="http://tka.github.io/blog/2012/01/04/blog-gai-yong-octopress/"/>
    <updated>2012-01-04T20:04:00+08:00</updated>
    <id>http://tka.github.io/blog/2012/01/04/blog-gai-yong-octopress</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
</feed>
